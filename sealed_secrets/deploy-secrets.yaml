apiVersion: argoproj.io/v1alpha1
kind: WorkflowTemplate
metadata:
  name: deploy-secrets
  namespace: argo
spec:
  templates:
  - name: deploySecretsToUserCluster
    activeDeadlineSeconds: 120
    inputs:
      parameters:
      - name: repo_url   # Eg, "demo-decapod10/C011b88fa/C011b88fa
      - name: secret_path  # Eg, "sealed-cert/secret.yaml"
      - name: namespace  # Eg, "default"
      - name: kubeconfig_secret_name  # Eg, "C011b88fa-kubeconfig"
    container:
      image: harbor-cicd.taco-cat.xyz/tks/hyperkube:v1.18.8
      imagePullPolicy: IfNotPresent
      command:
      - /bin/bash
      - -c
      - |
  
        cat <<< "$KUBE_CONFIG" > /etc/kubeconfig

        git clone https://$(echo -n $gittoken)@$repo_url
        repo_name=$(basename $repo_url)

        kubectl apply --kubeconfig=/etc/kubeconfig -n "{{inputs.parameters.namespace}}" -f $repo_name/"{{inputs.parameters.secret_path}}"

        # TODO: need to add logic to check if the secret was successfully created?

      envFrom:
        - secretRef:
            name: "gittoken"
      env:
        - name: repo_url
          value: "{{ inputs.parameters.repo_url }}"
        - name: KUBE_CONFIG
          valueFrom:
            secretKeyRef:
              name: "{{ inputs.parameters.kubeconfig_secret_name }}"
              key: value

  - name: deploySecretsToAdminCluster
    activeDeadlineSeconds: 120
    inputs:
      parameters:
      - name: repo_url   # Eg, "openinfradev/tks-admin-site"
      - name: secret_path  # Eg, "directory/secret.yaml"
      - name: namespace  # Eg, "default"
    container:
      image: harbor-cicd.taco-cat.xyz/tks/hyperkube:v1.18.8
      imagePullPolicy: IfNotPresent
      command:
      - /bin/bash
      - -c
      - |

        git clone https://$(echo -n $gittoken)@$repo_url
        repo_name=$(basename $repo_url)

        kubectl apply -n "{{inputs.parameters.namespace}}" -f $repo_name/"{{inputs.parameters.secret_path}}"

        # TODO: need to add logic to check if the secret was successfully created?
      env:
        - name: repo_url
          value: "{{ inputs.parameters.repo_url }}"
      envFrom:
        - secretRef:
            name: "gittoken"
