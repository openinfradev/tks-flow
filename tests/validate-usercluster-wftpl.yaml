apiVersion: argoproj.io/v1alpha1
kind: WorkflowTemplate
metadata:
  name: tks-validate-usercluster
  namespace: argo
spec:
  entrypoint: main
  arguments:
    parameters:
    - name: cluster_id
      value: "C011b88fa"
    - name: sonobuoy_mode
      value: "quick"
  templates:
  - name: main
    steps:
      - - name: validate-cluster
          template: run-sonobuoy
          arguments:
            parameters:
              - name: cluster_id
                value: "{{workflow.parameters.cluster_id}}"
              - name: sonobuoy_mode
                value: "{{workflow.parameters.sonobuoy_mode}}"

  - name: run-sonobuoy
    inputs:
      parameters:
        - name: cluster_id
        - name: sonobuoy_mode
          value: "quick"
    container:
      name: sonobuoy
      image: harbor-cicd.taco-cat.xyz/tks/sonobuoy-worker
      command:
        - /bin/bash
        - '-exc'
        - |
          KUBECONFIG_=$(kubectl get secret -n {{inputs.parameters.cluster_id}} {{inputs.parameters.cluster_id}}-kubeconfig -o jsonpath="{.data.value}" | base64 -d)
          cat <<< "$KUBECONFIG_" > /etc/kubeconfig_temp
          export KUBECONFIG='/etc/kubeconfig_temp'

          sonobuoy run --mode {{inputs.parameters.sonobuoy_mode}} --e2e-parallel 30 --wait
          sonobuoy retrieve && mkdir ./results
          tar xzf ./*.tar.gz -C ./results
          cat ./results/plugins/e2e/results/global/e2e.log

          status=$(sonobuoy status)

          if grep -q "failed" <<< "$status"; then
            echo "Sonobuoy e2e test failed!"
            exit 1
          fi

          sonobuoy delete --all --wait
