apiVersion: argoproj.io/v1alpha1
kind: WorkflowTemplate
metadata:
  name: aws-ebs-csi-iam
  namespace: argo
spec:
  entrypoint: createIAMRole
  arguments:
    parameters:
    - name: cluster_id
      value: "Cc81dd656"

  volumes:
    - name: awsconfig
      secret:
        secretName: awsconfig-secret

  templates:
  - name: createIAMRole
    activeDeadlineSeconds: 1800
    container:
      image: sktcloud/tks-aws:v1.0.0
      command:
      - /bin/bash
      - -exc
      - |
        mkdir ~/.aws
        cp /aws/* ~/.aws/

        oidc_id=$(aws eks describe-cluster --name $CLUSTER --query "cluster.identity.oidc.issuer" --output text | cut -d '/' -f 5)
        aws iam list-open-id-connect-providers | grep $oidc_id | cut -d "/" -f4

        eksctl utils associate-iam-oidc-provider --cluster $CLUSTER_ID --approve

        eksctl create iamserviceaccount \
          --name ebs-csi-controller-sa \
          --namespace kube-system \
          --cluster $CLUSTER \
          --attach-policy-arn arn:aws:iam::aws:policy/service-role/AmazonEBSCSIDriverPolicy \
          --approve \
          --override-existing-serviceaccounts \
          --role-name AmazonEKS_EBS_CSI_DriverRole_$CLUSTER

      env:
      - name: CLUSTER_ID
        value: "{{workflow.parameters.cluster_id}}"
      volumeMounts:
      - name: awsconfig
        mountPath: "/aws"

  - name: deleteIAMRole
    activeDeadlineSeconds: 1800
    container:
      image: sktcloud/tks-aws:v1.0.0
      command:
      - /bin/bash
      - -exc
      - |
        mkdir ~/.aws
        cp /aws/* ~/.aws/

	eksctl delete iamserviceaccount --cluster $CLUSTER_ID --name ebs-csi-controller-sa --namespace kube-system

      env:
      - name: CLUSTER_ID
        value: "{{workflow.parameters.cluster_id}}"
      volumeMounts:
      - name: awsconfig
        mountPath: "/aws"
