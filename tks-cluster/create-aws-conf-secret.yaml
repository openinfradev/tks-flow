apiVersion: argoproj.io/v1alpha1
kind: WorkflowTemplate
metadata:
  name: tks-create-aws-conf-secret
  namespace: argo
spec:
  entrypoint: createTokenSecret
  arguments:
    parameters:
    - name: aws_access_key_id
      value: "aws_access_key_id"
    - name: aws_secret_access_key
      value: "aws_secret_access_key"
    - name: aws_account_id
      value: "aws_account_id"
  templates:
  - name: createTokenSecret
    activeDeadlineSeconds: 120
    container:
      name: 'createSecret'
      image: k8s.gcr.io/hyperkube:v1.18.8
      imagePullPolicy: IfNotPresent
      command:
      - /bin/bash
      - -ecx
      - |
        kubectl delete secret -n argo awsconfig-secret || true

        echo "[default]
        aws_access_key_id = $AWS_ACCESS_KEY_ID
        aws_secret_access_key = $AWS_SECRET_ACCESS_KEY" > /tmp/credentials

        echo "[default]
        region = ap-northeast-2
        output = text" > /tmp/config
        
        kubectl create -n argo secret generic awsconfig-secret --from-file=config=/tmp/config --from-file=credentials=/tmp/credentials

        kubectl delete secret -n argo aws-account-id || true
        kubectl create secret generic aws-account-id --from-literal=AWS_ACCOUNT_ID=${AWS_ACCOUNT_ID}
      env:
      - name: AWS_ACCESS_KEY_ID
        value: "{{workflow.parameters.aws_access_key_id}}"
      - name: AWS_SECRET_ACCESS_KEY
        value: "{{workflow.parameters.aws_secret_access_key}}"
      - name: AWS_ACCOUNT_ID
        value: "{{workflow.parameters.aws_account_id}}"
