apiVersion: argoproj.io/v1alpha1
kind: WorkflowTemplate
metadata:
  name: tks-stack-create
  namespace: argo
spec:
  entrypoint: main
  arguments:
    parameters:
    - name: tks_api_url
      value: "http://tks-api.tks.svc:9110"
    - name: cloud_service
      value: "AWS"
    - name: cluster_name
      value: ""
    - name: description
      value: ""
    - name: organization_id
      value: ""
    - name: cloud_account_id
      value: "NULL"
    - name: stack_template_id
      value: "NULL"
    - name: creator
      value: ""
    - name: infra_conf
      value: ""
    - name: object_store
      value: "s3"
    - name: base_repo_branch
      value: develop
    - name: cluster_endpoint
      value: ""
    - name: policy_ids
      value: ""
    - name: cluster_domains
      value: ""

  templates:
  - name: main
    steps:
    - - name: tks-get-stack-template-type
        templateRef:
          name: tks-get-stack-template-type
          template: getTksGetStackTemplateType

    - - name: call-create-usercluster
        templateRef:
          name: tks-cli
          template: create-usercluster
        arguments:
          parameters:
          - name: cluster_name
            value: "{{workflow.parameters.cluster_name}}"
          - name: stack_template_id
            value: "{{workflow.parameters.stack_template_id}}"
          - name: organization_id
            value: "{{workflow.parameters.organization_id}}"
          - name: cloud_account_id
            value: "{{workflow.parameters.cloud_account_id}}"
          - name: creator
            value: "{{workflow.parameters.creator}}"
          - name: description
            value: "{{workflow.parameters.description}}"
          - name: infra_conf
            value: "{{workflow.parameters.infra_conf}}"
          - name: cloud_service
            value: "{{workflow.parameters.cloud_service}}"
          - name: cluster_endpoint
            value: "{{workflow.parameters.cluster_endpoint}}"
          - name: policy_ids
            value: "{{workflow.parameters.policy_ids}}"
          - name: cluster_domains
            value: "{{workflow.parameters.cluster_domains}}"

    - - name: call-create-appgroup-for-LMA
        templateRef:
          name: tks-cli
          template: create-appgroup
        arguments:
          parameters:
          - name: cluster_id
            value: "{{steps.call-create-usercluster.outputs.parameters.cluster-id}}"
          - name: name
            value: "{{steps.call-create-usercluster.outputs.parameters.cluster-id}}_lma"
          - name: type
            value: "LMA"
          - name: creator
            value: "{{workflow.parameters.creator}}"
          - name: description
            value: "{{workflow.parameters.description}}"
        when: "{{workflow.parameters.cloud_service}} != BYOH"

    - - name: call-create-appgroup-for-SERVICEMESH
        templateRef:
          name: tks-cli
          template: create-appgroup
        arguments:
          parameters:
          - name: cluster_id
            value: "{{steps.call-create-usercluster.outputs.parameters.cluster-id}}"
          - name: name
            value: "{{steps.call-create-usercluster.outputs.parameters.cluster-id}}_servicemesh"
          - name: type
            value: "SERVICE_MESH"
          - name: creator
            value: "{{workflow.parameters.creator}}"
          - name: description
            value: "{{workflow.parameters.description}}"
        when: "{{workflow.parameters.cloud_service}} != BYOH && {{steps.tks-get-stack-template-type.outputs.parameters.stack_template_type}} == MSA"

        when: >-
          {{workflow.parameters.cloud_service}} != BYOH &&
            {{steps.tks-get-stack-template-type.outputs.parameters.stack_template_type}} == MSA

